<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rd.ifaes.core.statistic.mapper.StatisticRepayMapper">
	<resultMap type="com.rd.ifaes.core.statistic.domain.StatisticRepay" id="statisticRepayResultMap">
		<result property="uuid" column="UUID"/>
		<result property="recordDate" column="RECORD_DATE"/>
		<result property="repayStatus" column="REPAY_STATUS"/>
		<result property="borrowType" column="BORROW_TYPE"/>
		<result property="borrowNature" column="BORROW_NATURE"/>
		<result property="payment" column="PAYMENT"/>
		<result property="capital" column="CAPITAL"/>
		<result property="interest" column="INTEREST"/>
		<result property="repayCount" column="REPAY_COUNT"/>
	</resultMap>
	
	<sql id="table_columns">
		UUID,
		RECORD_DATE,
		REPAY_STATUS,
		BORROW_TYPE,
		BORROW_NATURE,
		PAYMENT,
		CAPITAL,
		INTEREST,
		REPAY_COUNT
    </sql>
	<sql id="entity_properties">
		#{uuid},
		#{recordDate},
		#{repayStatus},
		#{borrowType},
		#{borrowNature},
		#{payment},
		#{capital},
		#{interest},
		#{repayCount}
	</sql>

    <!-- 使用like用法：columnName like concat('%',#{columnName},'%') -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="uuid != null and uuid != ''">and UUID = #{uuid}</if>
			<if test="recordDate != null">and RECORD_DATE = #{recordDate}</if>
            <if test="repayStatus != null and repayStatus != ''">and REPAY_STATUS = #{repayStatus}</if>
            <if test="borrowType != null and borrowType != ''">and BORROW_TYPE = #{borrowType}</if>
            <if test="borrowNature != null and borrowNature != ''">and BORROW_NATURE = #{borrowNature}</if>
			<if test="payment != null">and PAYMENT = #{payment}</if>
			<if test="capital != null">and CAPITAL = #{capital}</if>
			<if test="interest != null">and INTEREST = #{interest}</if>
			<if test="repayCount != null">and REPAY_COUNT = #{repayCount}</if>
        </trim>
        <if test="page != null and page.sort!=null and page.sort!=''">
        	order by ${page.sort} ${page.order}
        </if>
        <!-- <if test="page == null or page.sort == null or page.sort == ''">order by sort </if> --> 
    </sql>

	<insert id="insert" parameterType="com.rd.ifaes.core.statistic.domain.StatisticRepay">
		insert into statistic_repay( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">		
		insert into statistic_repay( <include refid="table_columns" /> ) 
		values 
		<foreach collection="list" item="item" index="index" separator=",">  
		( 
			#{item.uuid},
			#{item.recordDate},
			#{item.repayStatus},
			#{item.borrowType},
			#{item.borrowNature},
			#{item.payment},
			#{item.capital},
			#{item.interest},
			#{item.repayCount}
		)
		</foreach>
	</insert>

	<delete id="delete" parameterType="String">
		delete from statistic_repay
		where uuid = #{uuid}
	</delete>
	
	<update id="deleteBatch">
		update statistic_repay set delete_flag = 1
		where uuid in
		<foreach collection="array" item="id" open="(" separator="," close=")">  
            #{id} 
        </foreach>		
	</update>

	<update id="deleteLogic" parameterType="String">
		update statistic_repay set delete_flag = 1 
		where uuid = #{uuid}
	</update>

	<update id="update" parameterType="com.rd.ifaes.core.statistic.domain.StatisticRepay">
		update statistic_repay 
		<trim prefix="set" suffixOverrides=",">
			<if test="recordDate != null">RECORD_DATE = #{recordDate},</if>
            <if test="repayStatus != null and repayStatus != ''">REPAY_STATUS = #{repayStatus},</if>
            <if test="borrowType != null and borrowType != ''">BORROW_TYPE = #{borrowType},</if>
            <if test="borrowNature != null and borrowNature != ''">BORROW_NATURE = #{borrowNature},</if>
			<if test="payment != null">PAYMENT = #{payment},</if>
			<if test="capital != null">CAPITAL = #{capital},</if>
			<if test="interest != null">INTEREST = #{interest},</if>
			<if test="repayCount != null">REPAY_COUNT = #{repayCount},</if>
		</trim>
		<where>uuid = #{uuid}</where>
	</update>

    <select id="findAll" resultMap="statisticRepayResultMap">
        select <include refid="table_columns" />
        from statistic_repay
    </select>

    <select id="findList" resultMap="statisticRepayResultMap">
        select <include refid="table_columns" />
        from statistic_repay
        <include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        select count(uuid) from statistic_repay
        <include refid="page_where" />
    </select>


    <select id="get" resultMap="statisticRepayResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from statistic_repay
		where uuid = #{id}
	</select>
	
	<!-- 其他自定义SQL -->
	<sql id="select_dateType">
	   <choose> 
            <when test="3==dateType ">  
                date_format(record_date,'%X%m')  
            </when >  
            <when test="2==dateType ">  
                date_format(record_date,'%X%V')  
            </when >  
            <otherwise>
                date_format(record_date,'%Y%m%d')  
            </otherwise> 
	   </choose>
	</sql>
	
	<sql id="selectConditionSql">
		<choose> 
            <when test="reportType==2"> <!-- 按笔数 -->
            	ifnull(sum(repay_count),0) as repayCount
            </when >  
           <otherwise> <!-- 按金额 -->
          	 	ifnull(sum(payment),0) as payment,ifnull(sum(capital),0) as capital,ifnull(sum(interest),0) as interest
           </otherwise>  
		</choose>
	</sql>
	<resultMap type="com.rd.ifaes.core.statistic.model.StatisticResultModel" id="statisticResultModelResultMap">
		<result property="statDate" column="STAT_DATE"/>
		<result property="payment" column="PAYMENT"/>
		<result property="capital" column="CAPITAL"/>
		<result property="interest" column="INTEREST"/>
		<result property="repayCount" column="REPAY_COUNT"/>
	</resultMap>
	
	<!-- 获取起始日期前数值 -->
	<select id="getLastRepay" resultMap="statisticResultModelResultMap" parameterType="com.rd.ifaes.core.statistic.model.StatisticModel" >
		select  <include refid="selectConditionSql" />
		from statistic_repay
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="beforeStartDate != null and beforeStartDate != ''">and <include refid="select_dateType" /> = #{beforeStartDate}</if>
			<if test="repayStatus != null and repayStatus != ''">and repay_status = #{repayStatus}</if>
            <if test="borrowNature != null and borrowNature != ''">and borrow_nature = #{borrowNature}</if>
            <if test="borrowType != null and borrowType != ''">and borrow_type = #{borrowType}</if>
        </trim>
	</select>
	
	<select id="getStatisticRepay" resultMap="statisticResultModelResultMap" parameterType="com.rd.ifaes.core.statistic.model.StatisticModel" >
		select <include refid="select_dateType" /> as statDate,<include refid="selectConditionSql" />
		from statistic_repay
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="startDate != null and startDate != ''">and <include refid="select_dateType" /> &gt;= #{startDate}</if>
        	<if test="endDate != null and endDate != ''">and <include refid="select_dateType" />  &lt;= #{endDate}</if>
        	<if test="repayStatus != null and repayStatus != ''">and repay_status = #{repayStatus}</if>
        	<if test="borrowNature != null and borrowNature != ''">and borrow_nature = #{borrowNature}</if>
        	<if test="borrowType != null and borrowType != ''">and borrow_type = #{borrowType}</if>
        </trim>
        GROUP BY <include refid="select_dateType" />
	</select>

	<select id="recordBorrowRepayment" resultMap="statisticRepayResultMap" parameterType="com.rd.ifaes.core.statistic.model.StatisticModel" >
		select IFNULL(sum(pr.payment),0) as payment,IFNULL(sum(pr.capital),0) as capital,IFNULL(sum(pr.interest),0) as interest,count(pr.uuid) as repayCount
		from project_repayment pr
		inner join borrow b on b.project_id = pr.project_id
		inner join project p on p.uuid = pr.project_id
		<trim prefix="where" prefixOverrides="and | or ">
			<if test="repayStatus != null and repayStatus != ''">and pr.status = #{repayStatus}</if>
			<if test="borrowNature != null and borrowNature != ''">and b.borrow_nature = #{borrowNature}</if>
			and pr.late_days = 0 
			<choose>
				<when test="borrowType != null and borrowType==1">and b.has_pawn = '1'</when>
				<when test="borrowType != null and borrowType==2">and p.is_vouch = '1'</when>
				<when test="borrowType != null and borrowType==3">and b.has_pawn = '0' and p.is_vouch = '0'</when>
			</choose>
        </trim>
	</select>

</mapper>