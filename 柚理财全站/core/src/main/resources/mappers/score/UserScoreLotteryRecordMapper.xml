<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rd.ifaes.core.score.mapper.UserScoreLotteryRecordMapper">
	<resultMap type="com.rd.ifaes.core.score.domain.UserScoreLotteryRecord" id="UserScoreLotteryRecordResultMap">
		<result property="uuid" column="UUID"/>
		<result property="userId" column="USER_ID"/>
		<result property="lotteryType" column="LOTTERY_TYPE"/>
		<result property="goodsId" column="GOODS_ID"/>
		<result property="lotteryValue" column="LOTTERY_VALUE"/>
		<result property="score" column="SCORE"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="createIp" column="CREATE_IP"/>
		<result property="status" column="STATUS"/>
		<result property="remark" column="REMARK"/>
		<result property="userName" column="USER_NAME"/>
		<result property="mobile" column="MOBILE"/>
		<result property="realName" column="REAL_NAME"/>
		<result property="lotteryArea" column="LOTTERY_AREA"/>
	</resultMap>
	
	<sql id="table_columns">
		UUID,
		USER_ID,
		LOTTERY_TYPE,
		GOODS_ID,
		LOTTERY_VALUE,
		SCORE,
		CREATE_TIME,
		CREATE_IP,
		STATUS,
		REMARK,
		LOTTERY_AREA
    </sql>
	<sql id="entity_properties">
		#{uuid},
		#{userId},
		#{lotteryType},
		#{goodsId},
		#{lotteryValue},
		#{score},
		#{createTime},
		#{createIp},
		#{status},
		#{remark},
		#{lotteryArea}
	</sql>

    <!-- 使用like用法：columnName like concat('%',#{columnName},'%') -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="uuid != null and uuid != ''">and UUID = #{uuid}</if>
            <if test="userId != null and userId != ''">and us.USER_ID = #{userId}</if>
            <if test="keywords != null and keywords != ''">and u.USER_NAME like concat('%',#{keywords},'%')</if>
			<if test="lotteryType != null">and us.LOTTERY_TYPE = #{lotteryType}</if>
			<if test="goodsId != null">and us.GOODS_ID = #{goodsId}</if>
			<if test="lotteryValue != null">and us.LOTTERY_VALUE = #{lotteryValue}</if>
			<if test="score != 0">and us.SCORE = #{score}</if>
            <if test="status != null and status != ''">and us.STATUS = #{status}</if>
            <if test="lotteryTypeList != null and queryType == 1">
        		and (
	        		<foreach collection="lotteryTypeList" item="lotteryTypeValue" separator="or">
		        		<choose>  
				            <when test="lotteryTypeValue==3">
				                (us.lottery_type = #{lotteryTypeValue} and (us.lottery_area != '4' or us.lottery_area is null))
				            </when>  
				            <otherwise>  
				                us.lottery_type = #{lotteryTypeValue}
				            </otherwise>  
				        </choose>  
					</foreach> 
					)
        	</if>
        </trim>
        <if test="page != null and page.sort!=null and page.sort!=''">
        	order by us.${page.sort} ${page.order}
        </if>
        <if test="page == null or page.sort == null or page.sort == ''">order by us.create_time desc</if>
    </sql>

	<insert id="insert" parameterType="com.rd.ifaes.core.score.domain.UserScoreLotteryRecord">
		insert into user_score_lottery_record( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">		
		insert into user_score_lottery_record( <include refid="table_columns" /> ) 
		values 
		<foreach collection="list" item="item" index="index" separator=",">  
		( 
				#{item.uuid},
				#{item.userId},
				#{item.lotteryType},
				#{item.goodsId},
				#{item.lotteryValue},
				#{item.score},
				#{item.createTime},
				#{item.createIp},
				#{item.status},
				#{item.remark},
				#{item.lotteryArea}
		)
		</foreach>
	</insert>

	<delete id="delete" parameterType="String">
		delete from user_score_lottery_record
		where uuid = #{uuid}
	</delete>
	
	<update id="deleteBatch">
		delete from user_score_lottery_record 
		where uuid in
		<foreach collection="array" item="id" open="(" separator="," close=")">  
            #{id} 
        </foreach>		
	</update>

	<update id="update" parameterType="com.rd.ifaes.core.score.domain.UserScoreLotteryRecord">
		update user_score_lottery_record 
		<trim prefix="set" suffixOverrides=",">
			<if test="status != null">STATUS = #{status},</if>
		</trim>
		<where>uuid = #{uuid}</where>
	</update>

    <select id="findAll" resultMap="UserScoreLotteryRecordResultMap">
        select <include refid="table_columns" />
        from user_score_lottery_record
    </select>
    <select id="findList" resultMap="UserScoreLotteryRecordResultMap">
        select 
        	us.UUID,
			us.USER_ID,
			us.lottery_type,
			us.GOODS_ID,
			us.lottery_value,
			us.score,
			us.CREATE_TIME,
			us.create_ip,
			us.status,
			us.remark,
			u.user_name,
			u.real_name,
			u.mobile
        from 
        	user_score_lottery_record  us 
        inner join 
        	user u
        on
        	us.user_id = u.uuid
        <include refid="page_where" />
    </select>
    
    <select id="findNewList" parameterType="com.rd.ifaes.core.score.domain.UserScoreLotteryRecord" resultMap="UserScoreLotteryRecordResultMap">
        select 
        	us.UUID,
			us.USER_ID,
			us.lottery_type,
			us.GOODS_ID,
			us.lottery_value,
			us.score,
			us.CREATE_TIME,
			us.create_ip,
			us.status,
			us.remark,
			u.user_name,
			u.real_name,
			u.mobile
        from 
        	user_score_lottery_record  us 
        inner join 
        	user u
        on
        	us.user_id = u.uuid
        <trim prefix="where" prefixOverrides="and | or ">
        	<if test="lotteryTypeList != null and queryType == 1">
        		and (
	        		<foreach collection="lotteryTypeList" item="lotteryTypeValue" separator="or">
		        		<choose>  
				            <when test="lotteryTypeValue==3">
				                (us.lottery_type = #{lotteryTypeValue} and (us.lottery_area != '4' or us.lottery_area is null))
				            </when>  
				            <otherwise>  
				                us.lottery_type = #{lotteryTypeValue}
				            </otherwise>  
				        </choose>  
					</foreach> 
					)
        	</if>
        </trim>
        order by us.create_time desc limit #{showCount}
    </select>

    <select id="findByUserIds" resultMap="UserScoreLotteryRecordResultMap">
       select  us.UUID,
			us.USER_ID,
			us.lottery_type,
			us.GOODS_ID,
			us.lottery_value,
			us.score,
			us.CREATE_TIME,
			us.create_ip,
			us.status,
			us.remark
         from user_score_lottery_record us
         <where>
		    user_id in 
		    <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
		       #{item.uuid}
		    </foreach>
		 </where>
	</select>

    <select id="getCount" resultType="int" >
        select count(us.uuid) from user_score_lottery_record us
        <include refid="page_where" />
    </select>


    <select id="get" resultMap="UserScoreLotteryRecordResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from user_score_lottery_record
		where uuid = #{id}
	</select>
	
	<!-- 其他自定义SQL -->

</mapper>