<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rd.ifaes.core.project.mapper.RealizeFreezeMapper">
	<resultMap type="com.rd.ifaes.core.project.domain.RealizeFreeze" id="realizeFreezeResultMap">
		<result property="uuid" column="UUID"/>
		<result property="userId" column="USER_ID"/>
		<result property="realizeId" column="REALIZE_ID"/>
		<result property="collectionId" column="COLLECTION_ID"/>
		<result property="money" column="MONEY"/>
		<result property="freezeType" column="FREEZE_TYPE"/>
		<result property="status" column="STATUS"/>
		<result property="orderNo" column="ORDER_NO"/>
		<result property="freezeNo" column="FREEZE_NO"/>
		<result property="createTime" column="CREATE_TIME"/>
	</resultMap>
	
	<sql id="table_columns">
		UUID,
		USER_ID,
		REALIZE_ID,
		COLLECTION_ID,
		MONEY,
		FREEZE_TYPE,
		STATUS,
		ORDER_NO,
		FREEZE_NO,
		CREATE_TIME
    </sql>
	<sql id="entity_properties">
		#{uuid},
		#{userId},
		#{realizeId},
		#{collectionId},
		#{money},
		#{freezeType},
		#{status},
		#{orderNo},
		#{freezeNo},
		#{createTime}
	</sql>

    <!-- 使用like用法：columnName like concat('%',#{columnName},'%') -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="uuid != null and uuid != ''">and UUID = #{uuid}</if>
            <if test="userId != null and userId != ''">and USER_ID = #{userId}</if>
            <if test="realizeId != null and realizeId != ''">and REALIZE_ID = #{realizeId}</if>
            <if test="collectionId != null and collectionId != ''">and COLLECTION_ID = #{collectionId}</if>
			<if test="money != null">and MONEY = #{money}</if>
            <if test="freezeType != null and freezeType != ''">and FREEZE_TYPE = #{freezeType}</if>
            <if test="status != null and status != ''">and STATUS = #{status}</if>
            <if test="orderNo != null and orderNo != ''">and ORDER_NO = #{orderNo}</if>
            <if test="freezeNo != null and freezeNo != ''">and FREEZE_NO = #{freezeNo}</if>
            <if test="createTime != null">and CREATE_TIME = #{createTime}</if>
        </trim>
        <if test="page != null and page.sort!=null and page.sort!=''">
        	order by ${page.sort} ${page.order}
        </if>
        <!-- <if test="page == null or page.sort == null or page.sort == ''">order by sort </if> --> 
    </sql>

	<insert id="insert" parameterType="com.rd.ifaes.core.project.domain.RealizeFreeze">
		insert into realize_freeze( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">		
		insert into realize_freeze( <include refid="table_columns" /> ) 
		values 
		<foreach collection="list" item="item" index="index" separator=",">  
		( 
			#{item.uuid},
			#{item.userId},
			#{item.realizeId},
			#{item.collectionId},
			#{item.money},
			#{item.freezeType},
			#{item.status},
			#{item.orderNo},
			#{item.freezeNo},
			#{item.createTime}
		)
		</foreach>
	</insert>

	<update id="update" parameterType="com.rd.ifaes.core.project.domain.RealizeFreeze">
		update realize_freeze 
		<trim prefix="set" suffixOverrides=",">
            <if test="userId != null and userId != ''">USER_ID = #{userId},</if>
            <if test="realizeId != null and realizeId != ''">REALIZE_ID = #{realizeId},</if>
            <if test="collectionId != null and collectionId != ''">COLLECTION_ID = #{collectionId},</if>
			<if test="money != null">MONEY = #{money},</if>
            <if test="type != null and type != ''">TYPE = #{type},</if>
            <if test="status != null and status != ''">STATUS = #{status},</if>
			<if test="orderNo != null  and orderNo != ''">ORDER_NO = #{orderNo},</if>
			<if test="freezeNo != null  and freezeNo != ''">FREEZE_NO = #{freezeNo},</if>
		</trim>
		<where>uuid = #{uuid}</where>
	</update>

    <select id="findAll" resultMap="realizeFreezeResultMap">
        select <include refid="table_columns" />
        from realize_freeze
    </select>

    <select id="findList" resultMap="realizeFreezeResultMap">
        select <include refid="table_columns" />
        from realize_freeze
        <include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        select count(uuid) from realize_freeze
        <include refid="page_where" />
    </select>


    <select id="get" resultMap="realizeFreezeResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from realize_freeze
		where uuid = #{uuid}
	</select>
	<!-- 其他自定义SQL -->
	<select id="getSumFreezeMoney" resultType="java.math.BigDecimal">
       select IFNULL(sum(money),0) from realize_freeze 
       where collection_id = #{collectionId} and status = '0' and  user_id = #{userId} and freeze_type = #{freezeType} 
	</select>
	
	<select id="getFreezeListByCollection" resultMap="realizeFreezeResultMap">
       select <include refid="table_columns" /> from realize_freeze 
       where collection_id = #{collectionId} and status = '0'
	</select>
	
	<update id="updateFreeze" >
		update realize_freeze set status = '1',freeze_no = #{freezeNo},order_no = #{orderNo}
		where realize_id = #{realizeId} and status = '0' and collection_id = #{collectionId}  and freeze_type = #{freezeType}
	</update>
	
	<update id="cancelFreeze" >
		update realize_freeze set status = '4'
		where realize_id = #{realizeId} and status in ('0','1')
	</update>
	
	<select id="getFreezedListByRealizeId" resultMap="realizeFreezeResultMap">
       select <include refid="table_columns" /> from realize_freeze 
       where realize_id = #{realizeId} and status = #{status}
	</select>
	
</mapper>