<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rd.ifaes.core.protocol.mapper.ProtocolLogMapper">
	<resultMap type="com.rd.ifaes.core.protocol.domain.ProtocolLog" id="protocolLogResultMap">
	</resultMap>
	
	<sql id="table_columns">
		UUID,
		PROTOCOL_ID,
		PROTOCOL_TYPE,
		PROTOCOL_NAME,
		BUSINESS_ID,
		FILE_PATH,
		CREATE_TIME,
		REMARK
    </sql>
	<sql id="entity_properties">
		#{uuid},
		#{protocolId},
		#{protocolType},
		#{protocolName},
		#{businessId},
		#{filePath},
		#{createTime},
		#{remark}
	</sql>

    <!-- 使用like用法：columnName like '%'||#{columnName}||'%' -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="uuid != null and uuid != ''">and UUID = #{uuid}</if>
            <if test="protocolType != null and protocolType != ''">and PROTOCOL_TYPE = #{protocolType}</if>
            <if test="protocolName != null and protocolName != ''">and PROTOCOL_NAME like '%'||#{protocolName}||'%'</if>
            <if test="keywords != null and keywords != ''">AND (PROTOCOL_TYPE like '%'||#{keywords}||'%' or NAME like '%'||#{keywords}||'%')</if>
        </trim>
        <choose>
		  <when test="page != null and page.sort!=null and page.sort!=''">
		  		order by ${page.sort} ${page.order}
		   </when>
		  <otherwise>
		  		order by t.create_time desc
		  </otherwise>
		</choose>
        <!-- <if test="page == null or page.sort == null or page.sort == ''">order by sort </if> --> 
    </sql>

	<insert id="insert" parameterType="com.rd.ifaes.core.protocol.domain.ProtocolLog">
		insert into protocol_log( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">		
		BEGIN
		<foreach collection="list" item="item" index="index" separator=";">  
		insert into protocol_log( <include refid="table_columns" /> ) 
		values 
		( 
				#{item.uuid},
				#{item.protocolId},
				#{item.protocolType},
				#{item.protocolName},
				#{item.businessId},
				#{item.filePath},
				#{item.createTime},
				#{item.remark}
		)
		</foreach>
		; END ;
	</insert>

	<delete id="delete" parameterType="String">
		delete from protocol_log
		where uuid = #{uuid}
	</delete>
	
	<update id="deleteBatch">
		delete from protocol_log
		where uuid in
		<foreach collection="array" item="id" open="(" separator="," close=")">  
            #{id} 
        </foreach>		
	</update>

	<update id="deleteLogic" parameterType="String">
		delete from protocol_log
		where uuid = #{uuid}
	</update>

	<update id="update" parameterType="com.rd.ifaes.core.protocol.domain.ProtocolLog">
		update protocol_log 
		<trim prefix="set" suffixOverrides=",">
            <if test="protocolType != null and protocolType != ''">PROTOCOL_TYPE = #{protocolType},</if>
            <if test="protocolName != null and protocolName != ''">PROTOCOL_NAME = #{protocolName},</if>
            <if test="content != null and content != ''">CONTENT = #{content},</if>
            <if test="status != null and status != ''">STATUS = #{status}</if>
		</trim>
		<where>uuid = #{uuid}</where>
	</update>

    <select id="findAll" resultMap="protocolLogResultMap">
        select <include refid="table_columns" />
        from protocol_log
    </select>

    <select id="findList" resultMap="protocolLogResultMap">
      	select <include refid="table_columns" />
		from protocol_log
		<include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        select count(uuid) from protocol_log
        <include refid="page_where" />
    </select>


    <select id="get" resultMap="protocolLogResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from protocol_log
		where uuid = #{uuid}
	</select>
	
	<!-- 其他自定义SQL -->

    <!-- 后台展示数据 -->
    <select id="findManageList" resultMap="protocolLogResultMap">
        select t.UUID,
		t.PROTOCOL_ID,
		t.PROTOCOL_TYPE,
		t.PROTOCOL_NAME,
		t.BUSINESS_ID,
		t.FILE_PATH,
		t.CREATE_TIME,
		t.REMARK
        from protocol_log t
        where 1 = 1 
            <if test="protocolName != null and protocolName != ''">and PROTOCOL_NAME like '%'||#{protocolName}||'%'</if>
            <if test="protocolType != null and protocolType != ''">and PROTOCOL_TYPE = #{protocolType}</if>
            <if test="keywords != null and keywords != ''">AND (PROTOCOL_NAME like '%'||#{keywords}||'%' or PROTOCOL_TYPE like '%'||#{keywords}||'%')</if>
			<choose>
			  <when test="page != null and page.sort!=null and page.sort!=''">
			  		order by ${page.sort} ${page.order}
			   </when>
			  <otherwise>
			  		order by t.create_time desc
			  </otherwise>
			</choose>
	</select>

</mapper>