<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rd.ifaes.core.protocol.mapper.ProtocolMapper">
	<resultMap type="com.rd.ifaes.core.protocol.domain.Protocol" id="ProtocolResultMap">
		<result property="uuid" column="UUID"/>
		<result property="protocolType" column="PROTOCOL_TYPE"/>
		<result property="name" column="NAME"/>
		<result property="content" column="CONTENT"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="status" column="STATUS"/>
	</resultMap>
	
	<sql id="table_columns">
		UUID,
		PROTOCOL_TYPE,
		NAME,
		CONTENT,
		CREATE_TIME,
		STATUS
    </sql>
	<sql id="entity_properties">
		#{uuid},
		#{protocolType},
		#{name},
		#{content},
		#{createTime},
		#{status}
	</sql>

    <!-- 使用like用法：columnName like '%'||#{columnName}||'%' -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="uuid != null and uuid != ''">and UUID = #{uuid}</if>
            <if test="protocolType != null and protocolType != ''">and PROTOCOL_TYPE = #{protocolType}</if>
            <if test="name != null and name != ''">and NAME like '%'||#{name}||'%'</if>
            <if test="status != null and status != ''">AND STATUS = #{status}</if>
            <if test="keywords != null and keywords != ''">AND (PROTOCOL_TYPE like '%'||#{keywords}||'%' or NAME like '%'||#{keywords}||'%')</if>
        </trim>
        <choose>
		  <when test="page != null and page.sort!=null and page.sort!=''">
		  		order by ${page.sort} ${page.order}
		   </when>
		  <otherwise>
		  		order by CREATE_TIME desc
		  </otherwise>
		</choose>
        <!-- <if test="page == null or page.sort == null or page.sort == ''">order by sort </if> --> 
    </sql>

	<insert id="insert" parameterType="com.rd.ifaes.core.protocol.domain.Protocol">
		insert into protocol( <include refid="table_columns" /> ) 
		values ( <include refid="entity_properties" /> )
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">	
		BEGIN	
		<foreach collection="list" item="item" index="index" separator=";">  
		insert into protocol( <include refid="table_columns" /> ) 
		values 
		( 
				#{item.uuid},
				#{item.protocolType},
				#{item.name},
				#{item.content},
				#{item.createTime},
				#{item.status}
		)
		</foreach>
		; END ;
	</insert>

	<delete id="delete" parameterType="String">
		delete from protocol
		where uuid = #{uuid}
	</delete>
	
	<update id="deleteBatch">
		delete from protocol
		where uuid in
		<foreach collection="array" item="id" open="(" separator="," close=")">  
            #{id} 
        </foreach>		
	</update>

	<update id="deleteLogic" parameterType="String">
		delete from protocol
		where uuid = #{uuid}
	</update>

	<update id="update" parameterType="com.rd.ifaes.core.protocol.domain.Protocol">
		update protocol 
		<trim prefix="set" suffixOverrides=",">
            <if test="protocolType != null and protocolType != ''">PROTOCOL_TYPE = #{protocolType},</if>
            <if test="name != null and name != ''">NAME = #{name},</if>
            <if test="content != null and content != ''">CONTENT = #{content},</if>
            <if test="status != null and status != ''">STATUS = #{status}</if>
		</trim>
		<where>uuid = #{uuid}</where>
	</update>
	
	<update id="updateBatch" parameterType="java.util.List">
		BEGIN
		<foreach collection="list" item="item" open="" separator=";" close="">  
			update protocol 
			<trim prefix="set" suffixOverrides=",">
	            <if test="item.protocolType != null and item.protocolType != ''">PROTOCOL_TYPE = #{item.protocolType},</if>
	            <if test="item.name != null and item.name != ''">NAME = #{item.name},</if>
	            <if test="item.content != null and item.content != ''">CONTENT = #{item.content},</if>
	            <if test="item.status != null and item.status != ''">STATUS = #{item.status}</if>
			</trim>
			where uuid = #{item.uuid} 
        </foreach>	
        ; END ;
	</update>
	
    <select id="findAll" resultMap="ProtocolResultMap">
        select <include refid="table_columns" />
        from protocol
    </select>

    <select id="findList" resultMap="ProtocolResultMap">
      	select <include refid="table_columns" />
		from protocol
		<include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        select count(uuid) from protocol
        <include refid="page_where" />
    </select>


    <select id="get" resultMap="ProtocolResultMap" parameterType="String" >
		select <include refid="table_columns" />
		from protocol
		where uuid = #{uuid}
	</select>
	
	<!-- 其他自定义SQL -->

    <!-- 根据协议类型查询协议列表 -->
    <select id="getProtocolListByType" resultMap="ProtocolResultMap" parameterType="com.rd.ifaes.core.protocol.domain.Protocol" >
		select uuid, name,status from protocol where protocol_type = #{protocolType} and status= #{status}
	</select>

</mapper>