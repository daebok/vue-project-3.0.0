<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rd.ifaes.core.project.mapper.ProjectVerifyLogMapper">
	<resultMap type="com.rd.ifaes.core.project.domain.ProjectVerifyLog" id="ProjectVerifyLogResultMap">
		<result property="uuid" column="UUID"/>
		<result property="projectId" column="PROJECT_ID"/>
		<result property="verifyName" column="VERIFY_NAME"/>
		<result property="processNode" column="PROCESS_NODE"/>
		<result property="processResult" column="PROCESS_RESULT"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="remark" column="REMARK"/>
	</resultMap>
	<resultMap type="com.rd.ifaes.core.project.domain.ProjectVerifyLog" id="ProjectVerifyLogResult" extends="ProjectVerifyLogResultMap" >
		<result property="operatorName" column="OPERATOR_NAME"/>
	</resultMap>
	
	<sql id="table_columns">
		UUID,
		PROJECT_ID,
		VERIFY_NAME,
		PROCESS_NODE,
		PROCESS_RESULT,
		CREATE_TIME,
		REMARK
    </sql>
	<sql id="entity_properties">
		#{uuid},
		#{projectId},
		#{verifyName},
		#{processNode},
		#{processResult},
		#{createTime},
		#{remark}
	</sql>

    <!-- 使用like用法：columnName like '%'||#columnName#||'%' -->
    <sql id="page_where">
        <trim prefix="where" prefixOverrides="and | or ">
            <if test="uuid != null and uuid != ''">and UUID = #{uuid}</if>
            <if test="projectId != null and projectId != ''">and PROJECT_ID = #{projectId}</if>
            <if test="verifyName != null and verifyName != ''">and VERIFY_NAME = #{verifyName}</if>
            <if test="processNode != null and processNode != ''">and PROCESS_NODE = #{processNode}</if>
            <if test="processResult != null and processResult != ''">and PROCESS_RESULT = #{processResult}</if>
            <if test="createTime != null and createTime != ''">and CREATE_TIME = #{createTime}</if>
            <if test="remark != null and remark != ''">and REMARK = #{remark}</if>
        </trim>
    </sql>

	<insert id="insert" parameterType="com.rd.ifaes.core.project.domain.ProjectVerifyLog">
		INSERT INTO PROJECT_VERIFY_LOG( <include refid="table_columns" /> ) 
		VALUES ( 
				#{uuid},
				#{projectId},
				#{verifyName},
				#{processNode},
				#{processResult},
				sysdate,
				#{remark}
		 )
	</insert>

	<delete id="delete" parameterType="int">
		DELETE FROM PROJECT_VERIFY_LOG
		WHERE UUID = #{uuid}
	</delete>

    <select id="findList" resultMap="ProjectVerifyLogResultMap">
        SELECT <include refid="table_columns" />
        FROM PROJECT_VERIFY_LOG
        <include refid="page_where" />
	</select>

    <select id="getCount" resultType="int" >
        SELECT COUNT(UUID) FROM PROJECT_VERIFY_LOG
        <include refid="page_where" />
    </select>


    <select id="get" resultMap="ProjectVerifyLogResultMap" parameterType="int" >
		SELECT <include refid="table_columns" />
		FROM PROJECT_VERIFY_LOG
		WHERE UUID = #{id}
	</select>
	
	<!-- 其他自定义SQL -->
	<select id="findByProjectId" resultMap="ProjectVerifyLogResult">
		SELECT
			L.UUID,
			L.PROJECT_ID,
			L.VERIFY_NAME,
			(SELECT O.REAL_NAME FROM SYS_OPERATOR O WHERE O.UUID = L.VERIFY_NAME) OPERATOR_NAME,
			L.PROCESS_NODE,
			L.PROCESS_RESULT,
			L.CREATE_TIME,
			L.REMARK
		FROM
			PROJECT_VERIFY_LOG L
		WHERE
			L.PROJECT_ID = #{id}
		ORDER BY CREATE_TIME
	</select>
	
	<!-- 查询备注信息 -->
	<select id="getRemarkCreateTime" resultMap="ProjectVerifyLogResult">
		SELECT * FROM(
			SELECT ROW_NUMBER() OVER(PARTITION BY PROJECT_ID ORDER BY CREATE_TIME DESC) RN, L.REMARK, L.CREATE_TIME 
			FROM PROJECT_VERIFY_LOG L
			WHERE L.PROJECT_ID = #{projectId} AND L.PROCESS_NODE=#{processNode}
		) WHERE RN = 1
	</select>
	
	
	<!-- 获取最新审核记录 -->
	<select id="getRemarkByProjectId" resultType="String" parameterType="String">
		SELECT REMARK 
		FROM ( 
			SELECT ROW_NUMBER() OVER(PARTITION BY PROJECT_ID ORDER BY CREATE_TIME DESC) RN, PROJECT_ID, REMARK FROM PROJECT_VERIFY_LOG WHERE PROJECT_ID = #{projectId}
		)
		WHERE RN = 1 
	</select>
	
	<!-- 查询最新的审核记录集合，分组查询第一条记录 -->
	<select id="findRemarkByProjectIds" resultMap="ProjectVerifyLogResult">
		SELECT * 
		FROM ( 
			SELECT ROW_NUMBER() OVER(PARTITION BY PROJECT_ID ORDER BY CREATE_TIME DESC) RN, PROJECT_ID, REMARK FROM PROJECT_VERIFY_LOG WHERE PROJECT_ID IN 
			<foreach collection="array" item="uuid" open="(" separator="," close=")">  
	            #{uuid} 
	        </foreach>	
		)
		WHERE RN = 1 
	</select>

</mapper>