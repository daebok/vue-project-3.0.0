<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd
           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd"
	>

	<description>spring-rabbmitMQ Configuration</description>

	<!-- 加载配置属性文件 -->
	<!-- 
	<context:property-placeholder ignore-unresolvable="true" location="classpath:rabbmitmq.properties" />
	 -->

	<!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列 -->  
    <bean id="jsonMessageConverter"  class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"/>  
    
	<!-- 创建connectionFactory --> 	
    <!-- org.springframework.amqp.rabbit.connection.CachingConnectionFactory -->
    <task:executor id="mqExecutor" pool-size="20-100" keep-alive="600" queue-capacity="2000" rejection-policy="CALLER_RUNS" />
	<rabbit:connection-factory id="connectionFactory"
		addresses="${rabbit.addresses}" 
		username="${rabbit.username}"
		password="${rabbit.password}" 
		executor="mqExecutor"/>
		
	<!-- org.springframework.amqp.rabbit.core.RabbitAdmin -->
	<rabbit:admin connection-factory="connectionFactory" />
	
	<!-- queue 队列声明-->  
	<!-- org.springframework.amqp.core.Queue -->
	<rabbit:queue id="queue_log" name="queue_log" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_invest" name="queue_invest" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_auto_invest" name="queue_auto_invest" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_message" name="queue_message" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_user" name="queue_user" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_cash" name="queue_cash" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_trade" name="queue_trade" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_protocol" name="queue_protocol" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_actplan" name="queue_actplan" durable="true" auto-delete="false" exclusive="false" />
    <rabbit:queue id="queue_loan" name="queue_loan" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="queue_repay" name="queue_repay" durable="true" auto-delete="false" exclusive="false" />
	 <rabbit:queue id="queue_trade_loan" name="queue_trade_loan" durable="true" auto-delete="false" exclusive="false" />
    <rabbit:queue id="queue_trade_repay" name="queue_trade_repay" durable="true" auto-delete="false" exclusive="false" />
    <rabbit:queue id="queue_trade_investFail" name="queue_trade_investFail" durable="true" auto-delete="false" exclusive="false" />
	
	<!-- exchange queue binging key 绑定 --> 
	<rabbit:direct-exchange id="rd-mq-exchange" name="rd-mq-exchange" durable="true" auto-delete="false" >
		<rabbit:bindings>
			<rabbit:binding queue="queue_log" key="queue_log_key" />
			<rabbit:binding queue="queue_invest" key="queue_invest_key" />
			<rabbit:binding queue="queue_auto_invest" key="queue_auto_invest_key" />
			<rabbit:binding queue="queue_message" key="queue_message_key" />
			<rabbit:binding queue="queue_user" key="queue_user_key" />
			<rabbit:binding queue="queue_cash" key="queue_cash_key" />
			<rabbit:binding queue="queue_trade" key="queue_trade_key" />
			<rabbit:binding queue="queue_protocol" key="queue_protocol_key" />
			<rabbit:binding queue="queue_actplan" key="queue_actplan_key" />
			<rabbit:binding queue="queue_loan" key="queue_loan_key" />
			 <rabbit:binding queue="queue_repay" key="queue_repay_key" />
			 <rabbit:binding queue="queue_trade_loan" key="queue_trade_loan_key" />
			 <rabbit:binding queue="queue_trade_repay" key="queue_trade_repay_key" />
			 <rabbit:binding queue="queue_trade_investFail" key="queue_trade_investFail_key" />
		</rabbit:bindings>
	</rabbit:direct-exchange>
	
	<!-- 生产者配置:spring template声明 -->
	<!-- org.springframework.amqp.rabbit.core.RabbitTemplate 
		channel-transacted	true，随着spring事务进行提交或者回滚
	-->
	<rabbit:template id="rabbitTemplate" exchange="rd-mq-exchange"
		connection-factory="connectionFactory" 
		message-converter="jsonMessageConverter" 
		/>


</beans>